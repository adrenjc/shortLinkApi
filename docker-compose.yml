version: '3.8'

services:
  # MongoDB 服务
  mongo:
    image: registry.cn-hangzhou.aliyuncs.com/google_containers/mongo:6.0
    container_name: shortlink-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    command: ["--replSet", "rs0"]
    healthcheck:
      test: mongosh --eval "rs.initiate()"
      interval: 10s
      timeout: 10s
      retries: 3

  # Redis 服务
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/google_containers/redis:7-alpine
    container_name: shortlink-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # 后端服务
  api:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - REGISTRY_MIRROR=registry.cn-hangzhou.aliyuncs.com/google_containers
    container_name: shortlink-api
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/shortlink?replicaSet=rs0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=8080
    volumes:
      - ./logs:/app/logs

volumes:
  mongo_data:
  redis_data: 